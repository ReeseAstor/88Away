server {
    listen 80;
    listen [::]:80;
    server_name platform.romance-writers.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name platform.romance-writers.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/platform.romance-writers.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/platform.romance-writers.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options \"SAMEORIGIN\" always;
    add_header X-XSS-Protection \"1; mode=block\" always;
    add_header X-Content-Type-Options \"nosniff\" always;
    add_header Referrer-Policy \"no-referrer-when-downgrade\" always;
    add_header Content-Security-Policy \"default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';\" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/xml
        text/plain;
    
    # Client max body size for file uploads (covers, manuscripts)
    client_max_body_size 100M;
    
    # Romance platform specific locations
    
    # Main application
    location / {
        proxy_pass http://romance-platform:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # API routes with longer timeouts for AI processing
    location /api/ {
        proxy_pass http://romance-platform:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Special handling for AI generation endpoints
        location ~* /api/(ai|romance)/ {
            proxy_pass http://romance-platform:3000;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # File upload endpoints
        location ~* /api/(kdp|marketplace)/.*/(upload|cover|manuscript) {
            proxy_pass http://romance-platform:3000;
            proxy_request_buffering off;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
        }
    }
    
    # Static file serving for romance assets
    location /uploads/ {
        alias /var/www/uploads/;
        expires 1y;
        add_header Cache-Control \"public, immutable\";
        
        # Security for uploaded files
        location ~* \\.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
    location /covers/ {
        alias /var/www/covers/;
        expires 1y;
        add_header Cache-Control \"public, immutable\";
        
        # Allow CORS for cover images
        add_header Access-Control-Allow-Origin \"*\";
        add_header Access-Control-Allow-Methods \"GET, OPTIONS\";
        add_header Access-Control-Allow-Headers \"*\";
    }
    
    # WebSocket support for real-time collaboration
    location /ws/ {
        proxy_pass http://romance-platform:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection \"upgrade\";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Romance analytics service
    location /analytics-api/ {
        proxy_pass http://romance-analytics:3002/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Monitoring endpoints
    location /monitoring/ {
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Restrict access to monitoring
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://romance-platform:3000/health;
        access_log off;
    }
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Deny access to sensitive files
    location ~ /\\. {
        deny all;
    }
    
    location ~ ~$ {
        deny all;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/romance-platform.access.log;
    error_log /var/log/nginx/romance-platform.error.log;
}